{"ast":null,"code":"var _jsxFileName = \"/Users/paul/Desktop/unlock-code/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Hello\", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"This is just a fun little project I made to see if I can replicate what Snowden said about passwords under 8 characters can be solved under a second.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), \"Simply enter any code you would like my program to try unlock \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), \"and it'll display the password you entered, amount of attempts and the time in milliseconds. \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), \"Note: This obviously isn't a hack or anymeans. All it does is run every possible combination and compare it with the code entered.\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paul/Desktop/unlock-code/src/App.js"],"names":["React","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACX,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8JAE0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF1D,EAE+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF/D,EAEoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpE,oEAI8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ9D,mGAK6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL7F,EAKkG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALlG,uIAFJ,CADJ,CADJ;AAgBH;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                Hello\n                <p>\n                This is just a fun little project I made to see if I can replicate what Snowden said about \n                passwords under 8 characters can be solved under a second.<br/><br/><br/>\n\n                Simply enter any code you would like my program to try unlock <br/>\n                and it'll display the password you entered, amount of attempts and the time in milliseconds. <br/><br/>\n\n                Note: This obviously isn't a hack or anymeans. All it does is run every possible combination and compare it with the code entered.\n             </p>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}